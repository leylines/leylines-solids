// variables
let c0 = 0.172288258377627867050026795923; //(sqrt(5) - 3 + 2 * sqrt(5 - 2 * sqrt(5))) / 4
let c1 = 0.278768257917525705066412537456; //(1 - sqrt(5) + sqrt(2 * (5 - sqrt(5)))) / 4
let c2 = 0.309016994374947424102293417183; //(sqrt(5) - 1) / 4
let c3 = 0.363271264002680442947733378740; //sqrt(5 - 2 * sqrt(5)) / 2
let c4 = 0.587785252292473129168705954639; //sqrt(2 * (5 - sqrt(5))) / 4
let c5 = 0.672288258377627867050026795923; //(sqrt(5) - 1 + 2 * sqrt(5 - 2 * sqrt(5))) / 4
let c6 = 0.760073510670100996218732750562; //(sqrt(5) - 3 + sqrt(2 * (5 + sqrt(5)))) / 4
let c7 = 0.778768257917525705066412537456; //(3 - sqrt(5) + sqrt(2 * (5 - sqrt(5)))) / 4
let c8 = 0.951056516295153572116439333379; //sqrt(2 * (5 + sqrt(5))) / 4

let chamferedDodecahedron = {};
chamferedDodecahedron['name'] = "Chamfered Dodecahedron";
chamferedDodecahedron['points'] = [[0.0,c3,c8],[0.0,c3,-c8],[0.0,-c3,c8],[0.0,-c3,-c8],[c8,0.0,c3],[c8,0.0,-c3],[-c8,0.0,c3],[-c8,0.0,-c3],[c3,c8,0.0],[c3,-c8,0.0],[-c3,c8,0.0],[-c3,-c8,0.0],[c2,c0,c8],[c2,c0,-c8],[c2,-c0,c8],[c2,-c0,-c8],[-c2,c0,c8],[-c2,c0,-c8],[-c2,-c0,c8],[-c2,-c0,-c8],[c8,c2,c0],[c8,c2,-c0],[c8,-c2,c0],[c8,-c2,-c0],[-c8,c2,c0],[-c8,c2,-c0],[-c8,-c2,c0],[-c8,-c2,-c0],[c0,c8,c2],[c0,c8,-c2],[c0,-c8,c2],[c0,-c8,-c2],[-c0,c8,c2],[-c0,c8,-c2],[-c0,-c8,c2],[-c0,-c8,-c2],[c4,c1,c7],[c4,c1,-c7],[c4,-c1,c7],[c4,-c1,-c7],[-c4,c1,c7],[-c4,c1,-c7],[-c4,-c1,c7],[-c4,-c1,-c7],[c7,c4,c1],[c7,c4,-c1],[c7,-c4,c1],[c7,-c4,-c1],[-c7,c4,c1],[-c7,c4,-c1],[-c7,-c4,c1],[-c7,-c4,-c1],[c1,c7,c4],[c1,c7,-c4],[c1,-c7,c4],[c1,-c7,-c4],[-c1,c7,c4],[-c1,c7,-c4],[-c1,-c7,c4],[-c1,-c7,-c4],[0.0,c5,c6],[0.0,c5,-c6],[0.0,-c5,c6],[0.0,-c5,-c6],[c6,0.0,c5],[c6,0.0,-c5],[-c6,0.0,c5],[-c6,0.0,-c5],[c5,c6,0.0],[c5,-c6,0.0],[-c5,c6,0.0],[-c5,-c6,0.0],[c4,c4,c4],[c4,c4,-c4],[c4,-c4,c4],[c4,-c4,-c4],[-c4,c4,c4],[-c4,c4,-c4],[-c4,-c4,c4],[-c4,-c4,-c4]];
chamferedDodecahedron['lines'] = [[72,36],[36,64],[64,4],[4,20],[20,44],[44,72],[44,68],[68,8],[8,28],[28,52],[52,72],[52,60],[60,0],[0,12],[12,36],[73,37],[37,13],[13,1],[1,61],[61,53],[53,73],[53,29],[29,8],[68,45],[45,73],[45,21],[21,5],[5,65],[65,37],[74,38],[38,14],[14,2],[2,62],[62,54],[54,74],[54,30],[30,9],[9,69],[69,46],[46,74],[46,22],[22,4],[64,38],[75,39],[39,65],[5,23],[23,47],[47,75],[47,69],[9,31],[31,55],[55,75],[55,63],[63,3],[3,15],[15,39],[76,40],[40,16],[16,0],[60,56],[56,76],[56,32],[32,10],[10,70],[70,48],[48,76],[48,24],[24,6],[6,66],[66,40],[77,41],[41,67],[67,7],[7,25],[25,49],[49,77],[49,70],[10,33],[33,57],[57,77],[57,61],[1,17],[17,41],[78,42],[42,66],[6,26],[26,50],[50,78],[50,71],[71,11],[11,34],[34,58],[58,78],[58,62],[2,18],[18,42],[79,43],[43,19],[19,3],[63,59],[59,79],[59,35],[35,11],[71,51],[51,79],[51,27],[27,7],[67,43],[14,12],[16,18],[19,17],[13,15],[22,23],[21,20],[27,26],[24,25],[29,33],[32,28],[30,34],[35,31]];
chamferedDodecahedron['areas'] = [[72,36,64,4,20,44],[72,44,68,8,28,52],[72,52,60,0,12,36],[73,37,13,1,61,53],[73,53,29,8,68,45],[73,45,21,5,65,37],[74,38,14,2,62,54],[74,54,30,9,69,46],[74,46,22,4,64,38],[75,39,65,5,23,47],[75,47,69,9,31,55],[75,55,63,3,15,39],[76,40,16,0,60,56],[76,56,32,10,70,48],[76,48,24,6,66,40],[77,41,67,7,25,49],[77,49,70,10,33,57],[77,57,61,1,17,41],[78,42,66,6,26,50],[78,50,71,11,34,58],[78,58,62,2,18,42],[79,43,19,3,63,59],[79,59,35,11,71,51],[79,51,27,7,67,43],[2,14,12,0,16,18],[3,19,17,1,13,15],[4,22,23,5,21,20],[7,27,26,6,24,25],[8,29,33,10,32,28],[9,30,34,11,35,31],[60,52,28,32,56],[61,57,33,29,53],[62,58,34,30,54],[63,55,31,35,59],[64,36,12,14,38],[65,39,15,13,37],[66,42,18,16,40],[67,41,17,19,43],[68,44,20,21,45],[69,47,23,22,46],[70,49,25,24,48],[71,50,26,27,51]];

chamferedDodecahedron['distance'] = 20000.0;
chamferedDodecahedron['color'] = [255,255,255];

export { chamferedDodecahedron };
