export function getPoints (latitude, longitude, bearing, mode) {

   if (bearing == -180) { bearing = 180; }
   bearing = -toRadians(bearing);

   var thetaX;
   var thetaY;
   var thetaZ;
   var shapes = {};
   var c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18;

   var shape = [];

   if (mode == 'greatCircle') {
      c0 = 0.7071067811865475244008443621048 //= sqrt(2) / 2
      shape = [[0.0,0.0,c0],[0.0,0.0,-c0],[c0,0.0,0.0],[-c0,0.0,0.0]]
/*
   } else if (mode == 'tetrahedron') {
      c0 = 0.353553390593273762200422181052 //= sqrt(2) / 4
      shape = [[c0,-c0,c0],[c0,c0,-c0],[-c0,c0,c0],[-c0,-c0,-c0]]
*/
   } else if (mode == 'octahedron') {
      c0 = 0.7071067811865475244008443621048 //= sqrt(2) / 2
      shape = [[0.0,0.0,c0],[0.0,0.0,-c0],[c0,0.0,0.0],[-c0,0.0,0.0],[0.0,c0,0.0],[0.0,-c0,0.0]]
/*
   } else if (mode == 'cube') {
      c0 = 0.7071067811865475244008443621048 //= sqrt(2) / 2
      shape = [[0.5,0.5,0.5],[0.5,0.5,-0.5],[0.5,-0.5,0.5],[0.5,-0.5,-0.5],[-0.5,0.5,0.5],[-0.5,0.5,-0.5],[-0.5,-0.5,0.5],[-0.5,-0.5,-0.5]]
   } else if (mode == 'icosahedron') {
      c0 = 0.809016994374947424102293417183 //= (1 + sqrt(5)) / 4
      shape = [[0.5,0.0,c0],[0.5,0.0,-c0],[-0.5,0.0,c0],[-0.5,0.0,-c0],[c0,0.5,0.0],[c0,-0.5,0.0],[-c0,0.5,0.0],[-c0,-0.5,0.0],[0.0,c0,0.5],[0.0,c0,-0.5],[0.0,-c0,0.5],[0.0,-c0,-0.5]]
   } else if (mode == 'dodecahedron') {
      c0 = 0.809016994374947424102293417183 //= (1 + sqrt(5)) / 4
      c1 = 1.30901699437494742410229341718  //= (3 + sqrt(5)) / 4
      shape = [[0.0,0.5,c1],[0.0,0.5,-c1],[0.0,-0.5,c1],[0.0,-0.5,-c1],[c1,0.0,0.5],[c1,0.0,-0.5],[-c1,0.0,0.5],[-c1,0.0,-0.5],[0.5,c1,0.0],[0.5,-c1,0.0],[-0.5,c1,0.0],[-0.5,-c1,0.0],[c0,c0,c0],[c0,c0,-c0],[c0,-c0,c0],[c0,-c0,-c0],[-c0,c0,c0],[-c0,c0,-c0],[-c0,-c0,c0],[-c0,-c0,-c0]]
*/
   } else if (mode == 'beckerhagens') {
      c0 = (1+Math.sqrt(5.0))/2.0;
      shape = [[2,0,0],[c0,0,-1/c0],[c0,-1/c0,-1],[1,-1,-1],[1/c0,-1,-c0],[0,-1/c0,-c0],[0,0,-2],[0,1/c0,-c0],[1/c0,1,-c0],[1,1,-1],[c0,1/c0,-1],[c0,-1,0],[1,-c0,-1/c0],[0,-c0,-1],[-1/c0,-1,-c0],[-1,0,-c0],[-1/c0,1,-c0],[0,c0,-1],[1,c0,-1/c0],[c0,1,0],[c0,0,1/c0],[c0,-1/c0,1],[1,-1,1],[1,-c0,1/c0],[1/c0,-c0,0],[0,-2,0],[-1/c0,-c0,0],[-1,-c0,-1/c0],[-1,-1,-1],[-c0,-1/c0,-1],[-c0,0,-1/c0],[-c0,1/c0,-1],[-1,1,-1],[-1,c0,-1/c0],[-1/c0,c0,0],[0,2,0],[1/c0,c0,0],[1,c0,1/c0],[1,1,1],[c0,1/c0,1],[1,0,c0],[1/c0,-1,c0],[0,-c0,1],[-1,-c0,1/c0],[-c0,-1,0],[-2,0,0],[-c0,1,0],[-1,c0,1/c0],[0,c0,1],[1/c0,1,c0],[0,0,2],[0,-1/c0,c0],[-1/c0,-1,c0],[-1,-1,1],[-c0,-1/c0,1],[-c0,0,1/c0],[-c0,1/c0,1],[-1,1,1],[-1/c0,1,c0],[0,1/c0,c0],[1,0,-c0],[-1,0,c0]];
   } else if (mode == 'beckerhagensMinor') {
      c0 = 0.353553390593273762200422181052 //= sqrt(2) / 4
      c1 = 1.06066017177982128660126654316  //= 3 * sqrt(2) / 4
      c2 = 0.809016994374947424102293417183 //= (1 + sqrt(5)) / 4
      c3 = 1.61803398874989484820458683437  //= (1 + sqrt(5)) / 2
      c4 = 1.80901699437494742410229341718  //= (5 + sqrt(5)) / 4
      c5 = 2.11803398874989484820458683437  //= (2 + sqrt(5)) / 2
      c6 = 2.427050983124842272306880251548 //= 3 * (1 + sqrt(5)) / 4
      shape = [[c0,-c0,c1],[c0,c0,-c1],[-c0,c0,c1],[-c0,-c0,-c1],[c1,-c0,c0],[c1,c0,-c0],[-c1,c0,c0],[-c1,-c0,-c0],[c0,-c1,c0],[c0,c1,-c0],[-c0,c1,c0],[-c0,-c1,-c0],[0.5,0.0,c6],[0.5,0.0,-c6],[-0.5,0.0,c6],[-0.5,0.0,-c6],[c6,0.5,0.0],[c6,-0.5, 0.0],[-c6,0.5,0.0],[-c6,-0.5, 0.0],[0.0,c6,0.5],[0.0,c6,-0.5],[0.0,-c6,0.5],[0.0,-c6,-0.5],[1.0,c2,c5],[1.0,c2,-c5],[1.0,-c2,c5],[1.0,-c2,-c5],[-1.0,c2,c5],[-1.0,c2,-c5],[-1.0,-c2,c5],[-1.0,-c2,-c5],[c5,1.0,c2],[c5,1.0,-c2],[c5,-1.0,c2],[c5,-1.0,-c2],[-c5,1.0,c2],[-c5,1.0,-c2],[-c5,-1.0,c2],[-c5,-1.0,-c2],[c2,c5,1.0],[c2,c5,-1.0],[c2,-c5,1.0],[c2,-c5,-1.0],[-c2,c5,1.0],[-c2,c5,-1.0],[-c2,-c5,1.0],[-c2,-c5,-1.0],[0.5,c3,c4],[0.5,c3,-c4],[0.5,-c3,c4],[0.5,-c3,-c4],[-0.5,c3,c4],[-0.5,c3,-c4],[-0.5,-c3,c4],[-0.5,-c3,-c4],[c4,0.5,c3],[c4,0.5,-c3],[c4,-0.5,c3],[c4,-0.5,-c3],[-c4,0.5,c3],[-c4,0.5,-c3],[-c4,-0.5,c3],[-c4,-0.5,-c3],[c3,c4,0.5],[c3,c4,-0.5],[c3,-c4,0.5],[c3,-c4,-0.5],[-c3,c4,0.5],[-c3,c4,-0.5],[-c3,-c4,0.5],[-c3,-c4,-0.5]];
   } else if (mode == 'truncatedTetrahedron') {
      c0 = 0.353553390593273762200422181052 //= sqrt(2) / 4
      c1 = 1.06066017177982128660126654316  //= 3 * sqrt(2) / 4
      shape = [[c0,-c0,c1],[c0,c0,-c1],[-c0,c0,c1],[-c0,-c0,-c1],[c1,-c0,c0],[c1,c0,-c0],[-c1,c0,c0],[-c1,-c0,-c0],[c0,-c1,c0],[c0,c1,-c0],[-c0,c1,c0],[-c0,-c1,-c0]]
   } else if (mode == 'truncatedIcosahedron') {
      c0 = 0.809016994374947424102293417183 //= (1 + sqrt(5)) / 4
      c1 = 1.61803398874989484820458683437  //= (1 + sqrt(5)) / 2
      c2 = 1.80901699437494742410229341718  //= (5 + sqrt(5)) / 4
      c3 = 2.11803398874989484820458683437  //= (2 + sqrt(5)) / 2
      c4 = 2.427050983124842272306880251548 //= 3 * (1 + sqrt(5)) / 4
      shape = [[0.5,0.0,c4],[0.5,0.0,-c4],[-0.5,0.0,c4],[-0.5,0.0,-c4],[c4,0.5,0.0],[c4,-0.5, 0.0],[-c4,0.5,0.0],[-c4,-0.5, 0.0],[0.0,c4,0.5],[0.0,c4,-0.5],[0.0,-c4,0.5],[0.0,-c4,-0.5],[1.0,c0,c3],[1.0,c0,-c3],[1.0,-c0,c3],[1.0,-c0,-c3],[-1.0,c0,c3],[-1.0,c0,-c3],[-1.0,-c0,c3],[-1.0,-c0,-c3],[c3,1.0,c0],[c3,1.0,-c0],[c3,-1.0,c0],[c3,-1.0,-c0],[-c3,1.0,c0],[-c3,1.0,-c0],[-c3,-1.0,c0],[-c3,-1.0,-c0],[c0,c3,1.0],[c0,c3,-1.0],[c0,-c3,1.0],[c0,-c3,-1.0],[-c0,c3,1.0],[-c0,c3,-1.0],[-c0,-c3,1.0],[-c0,-c3,-1.0],[0.5,c1,c2],[0.5,c1,-c2],[0.5,-c1,c2],[0.5,-c1,-c2],[-0.5,c1,c2],[-0.5,c1,-c2],[-0.5,-c1,c2],[-0.5,-c1,-c2],[c2,0.5,c1],[c2,0.5,-c1],[c2,-0.5,c1],[c2,-0.5,-c1],[-c2,0.5,c1],[-c2,0.5,-c1],[-c2,-0.5,c1],[-c2,-0.5,-c1],[c1,c2,0.5],[c1,c2,-0.5],[c1,-c2,0.5],[c1,-c2,-0.5],[-c1,c2,0.5],[-c1,c2,-0.5],[-c1,-c2,0.5],[-c1,-c2,-0.5]];
   } else if (mode == 'truncatedDodecahedron') {
      c0 = 1.30901699437494742410229341718  //(3 + sqrt(5)) / 4
      c1 = 1.61803398874989484820458683437  //(1 + sqrt(5)) / 2
      c2 = 2.11803398874989484820458683437  //(2 + sqrt(5)) / 2
      c3 = 2.61803398874989484820458683437  //(3 + sqrt(5)) / 2
      c4 = 2.927050983124842272306880251548 //(5 + 3 * sqrt(5)) / 4
      shape = [[0.0,0.5,c4],[0.0,0.5,-c4],[0.0,-0.5,c4],[0.0,-0.5,-c4],[c4,0.0,0.5],[c4,0.0,-0.5],[-c4,0.0,0.5],[-c4,0.0,-0.5],[0.5,c4,0.0],[0.5,-c4,0.0],[-0.5,c4,0.0],[-0.5,-c4,0.0],[0.5,c0,c3],[0.5,c0,-c3],[0.5,-c0,c3],[0.5,-c0,-c3],[-0.5,c0,c3],[-0.5,c0,-c3],[-0.5,-c0,c3],[-0.5,-c0,-c3],[c3,0.5,c0],[c3,0.5,-c0],[c3,-0.5,c0],[c3,-0.5,-c0],[-c3,0.5,c0],[-c3,0.5,-c0],[-c3,-0.5,c0],[-c3,-0.5,-c0],[c0,c3,0.5],[c0,c3,-0.5],[c0,-c3,0.5],[c0,-c3,-0.5],[-c0,c3,0.5],[-c0,c3,-0.5],[-c0,-c3,0.5],[-c0,-c3,-0.5],[c0,c1,c2],[c0,c1,-c2],[c0,-c1,c2],[c0,-c1,-c2],[-c0,c1,c2],[-c0,c1,-c2],[-c0,-c1,c2],[-c0,-c1,-c2],[c2,c0,c1],[c2,c0,-c1],[c2,-c0,c1],[c2,-c0,-c1],[-c2,c0,c1],[-c2,c0,-c1],[-c2,-c0,c1],[-c2,-c0,-c1],[c1,c2,c0],[c1,c2,-c0],[c1,-c2,c0],[c1,-c2,-c0],[-c1,c2,c0],[-c1,c2,-c0],[-c1,-c2,c0],[-c1,-c2,-c0]]
   } else if (mode == 'truncatedIcosidodecahedron') {
      c0 = 1.30901699437494742410229341718  //(3 + sqrt(5)) / 4
      c1 = 1.61803398874989484820458683437  //(1 + sqrt(5)) / 2
      c2 = 1.80901699437494742410229341718  //(5 + sqrt(5)) / 4
      c3 = 2.11803398874989484820458683437  //(2 + sqrt(5)) / 2
      c4 = 2.427050983124842272306880251548 //3 * (1 + sqrt(5)) / 4
      c5 = 2.61803398874989484820458683437  //(3 + sqrt(5)) / 2
      c6 = 2.927050983124842272306880251548 //(5 + 3 * sqrt(5)) / 4
      c7 = 3.11803398874989484820458683437  //(4 + sqrt(5)) / 2
      c8 = 3.427050983124842272306880251548 //(7 + 3 * sqrt(5)) / 4
      c9 = 3.73606797749978969640917366873  //(3 + 2 * sqrt(5)) / 2
      shape = [[0.5,0.5,c9],[0.5,0.5,-c9],[0.5,-0.5,c9],[0.5,-0.5,-c9],[-0.5,0.5,c9],[-0.5,0.5,-c9],[-0.5,-0.5,c9],[-0.5,-0.5,-c9],[c9,0.5,0.5],[c9,0.5,-0.5],[c9,-0.5,0.5],[c9,-0.5,-0.5],[-c9,0.5,0.5],[-c9,0.5,-0.5],[-c9,-0.5,0.5],[-c9,-0.5,-0.5],[0.5,c9,0.5],[0.5,c9,-0.5],[0.5,-c9,0.5],[0.5,-c9,-0.5],[-0.5,c9,0.5],[-0.5,c9,-0.5],[-0.5,-c9,0.5],[-0.5,-c9,-0.5],[1.0,c0,c8],[1.0,c0,-c8],[1.0,-c0,c8],[1.0,-c0,-c8],[-1.0,c0,c8],[-1.0,c0,-c8],[-1.0,-c0,c8],[-1.0,-c0,-c8],[c8,1.0,c0],[c8,1.0,-c0],[c8,-1.0,c0],[c8,-1.0,-c0],[-c8,1.0,c0],[-c8,1.0,-c0],[-c8,-1.0,c0],[-c8,-1.0,-c0],[c0,c8,1.0],[c0,c8,-1.0],[c0,-c8,1.0],[c0,-c8,-1.0],[-c0,c8,1.0],[-c0,c8,-1.0],[-c0,-c8,1.0],[-c0,-c8,-1.0],[0.5,c3,c7],[0.5,c3,-c7],[0.5,-c3,c7],[0.5,-c3,-c7],[-0.5,c3,c7],[-0.5,c3,-c7],[-0.5,-c3,c7],[-0.5,-c3,-c7],[c7,0.5,c3],[c7,0.5,-c3],[c7,-0.5,c3],[c7,-0.5,-c3],[-c7,0.5,c3],[-c7,0.5,-c3],[-c7,-0.5,c3],[-c7,-0.5,-c3],[c3,c7,0.5],[c3,c7,-0.5],[c3,-c7,0.5],[c3,-c7,-0.5],[-c3,c7,0.5],[-c3,c7,-0.5],[-c3,-c7,0.5],[-c3,-c7,-0.5],[c2,c1,c6],[c2,c1,-c6],[c2,-c1,c6],[c2,-c1,-c6],[-c2,c1,c6],[-c2,c1,-c6],[-c2,-c1,c6],[-c2,-c1,-c6],[c6,c2,c1],[c6,c2,-c1],[c6,-c2,c1],[c6,-c2,-c1],[-c6,c2,c1],[-c6,c2,-c1],[-c6,-c2,c1],[-c6,-c2,-c1],[c1,c6,c2],[c1,c6,-c2],[c1,-c6,c2],[c1,-c6,-c2],[-c1,c6,c2],[-c1,c6,-c2],[-c1,-c6,c2],[-c1,-c6,-c2],[c0,c4,c5],[c0,c4,-c5],[c0,-c4,c5],[c0,-c4,-c5],[-c0,c4,c5],[-c0,c4,-c5],[-c0,-c4,c5],[-c0,-c4,-c5],[c5,c0,c4],[c5,c0,-c4],[c5,-c0,c4],[c5,-c0,-c4],[-c5,c0,c4],[-c5,c0,-c4],[-c5,-c0,c4],[-c5,-c0,-c4],[c4,c5,c0],[c4,c5,-c0],[c4,-c5,c0],[c4,-c5,-c0],[-c4,c5,c0],[-c4,c5,-c0],[-c4,-c5,c0],[-c4,-c5,-c0]]
   } else if (mode == 'triakisTetrahedron') {
      c0 = 0.636396103067892771960759925894 //= 9 * sqrt(2) / 20
      c1 = 1.06066017177982128660126654316  //= 3 * sqrt(2) / 4
      shape = [[c1,c1,c1],[c1,-c1,-c1],[-c1,-c1,c1],[-c1,c1,-c1],[c0,-c0,c0],[c0,c0,-c0],[-c0,c0,c0],[-c0,-c0,-c0]]
   } else if (mode == 'triakisIcosahedron') {
      c0 = 1.04955317926133973822831518963  //5 * (7 + sqrt(5)) / 44
      c1 = 1.69821271704535895291326075851  //5 * (3 + 2 * sqrt(5)) / 22
      c2 = 1.80901699437494742410229341718  //(5 + sqrt(5)) / 4
      c3 = 2.74776589630669869114157594814  //5 * (13 + 5 * sqrt(5)) / 44
      c4 = 2.927050983124842272306880251548 //(5 + 3 * sqrt(5)) / 4
      shape = [[c2,0.0,c4],[c2,0.0,-c4],[-c2,0.0,c4],[-c2,0.0,-c4],[c4,c2,0.0],[c4,-c2,0.0],[-c4,c2,0.0],[-c4,-c2,0.0],[0.0,c4,c2],[0.0,c4,-c2],[0.0,-c4,c2],[0.0,-c4,-c2],[0.0,c0,c3],[0.0,c0,-c3],[0.0,-c0,c3],[0.0,-c0,-c3],[c3,0.0,c0],[c3,0.0,-c0],[-c3,0.0,c0],[-c3,0.0,-c0],[c0,c3,0.0],[c0,-c3,0.0],[-c0,c3,0.0],[-c0,-c3,0.0],[c1,c1,c1],[c1,c1,-c1],[c1,-c1,c1],[c1,-c1,-c1],[-c1,c1,c1],[-c1,c1,-c1],[-c1,-c1,c1],[-c1,-c1,-c1]]
   } else if (mode == 'pentakisDodecahedron') {
      c0 = 0.927050983124842272306880251548 //= 3 * (sqrt(5) - 1) / 4
      c1 = 1.33058699733550141141687582919  // = 9 * (9 + sqrt(5)) / 76
      c2 = 2.15293498667750705708437914596  // = 9 * (7 + 5 * sqrt(5)) / 76
      c3 = 2.427050983124842272306880251548 // = 3 * (1 + sqrt(5)) / 4
      shape = [[0.0,c0,c3],[0.0,c0,-c3],[0.0,-c0,c3],[0.0,-c0,-c3],[c3,0.0,c0],[c3,0.0,-c0],[-c3,0.0,c0],[-c3,0.0,-c0],[c0,c3,0.0],[c0,-c3,0.0],[-c0,c3,0.0],[-c0,-c3,0.0],[c1,0.0,c2],[c1,0.0,-c2],[-c1,0.0,c2],[-c1,0.0,-c2],[c2,c1,0.0],[c2,-c1,0.0],[-c2,c1,0.0],[-c2,-c1,0.0],[0.0,c2,c1],[0.0,c2,-c1],[0.0,-c2,c1],[0.0,-c2,-c1],[1.5,1.5,1.5],[1.5,1.5,-1.5],[1.5,-1.5,1.5],[1.5,-1.5,-1.5],[-1.5,1.5,1.5],[-1.5,1.5,-1.5],[-1.5,-1.5,1.5],[-1.5,-1.5,-1.5]]
   } else if (mode == 'disdyakisTriacontahedron') {
      c0 = 1.17518645301134929748244365923  //3 * (15 + sqrt(5)) / 44
      c1 = 1.38196601125010515179541316563  //(5 - sqrt(5)) / 2
      c2 = 1.901491624090794379859549273853 //3 * (5 + 4 * sqrt(5)) / 22
      c3 = 2.17082039324993690892275210062  //3 * (5 + sqrt(5)) / 10
      c4 = 2.23606797749978969640917366873  //sqrt(5)
      c5 = 3.07667807710214367734199293309  //(75 + 27 * sqrt(5)) / 44
      c6 = 3.51246117974981072676825630186  //(15 + 9 * sqrt(5)) / 10
      c7 = 3.61803398874989484820458683437  //(5 + sqrt(5)) / 2
      c8 = 3.80298324818158875971909854771  //3 * (5 + 4 * sqrt(5)) / 11
      shape = [[0.0,0.0,c8],[0.0,0.0,-c8],[c8,0.0,0.0],[-c8,0.0,0.0],[0.0,c8,0.0],[0.0,-c8,0.0],[0.0,c1,c7],[0.0,c1,-c7],[0.0,-c1,c7],[0.0,-c1,-c7],[c7,0.0,c1],[c7,0.0,-c1],[-c7,0.0,c1],[-c7,0.0,-c1],[c1,c7,0.0],[c1,-c7,0.0],[-c1,c7,0.0],[-c1,-c7,0.0],[c3,0.0,c6],[c3,0.0,-c6],[-c3,0.0,c6],[-c3,0.0,-c6],[c6,c3,0.0],[c6,-c3,0.0],[-c6,c3,0.0],[-c6,-c3,0.0],[0.0,c6,c3],[0.0,c6,-c3],[0.0,-c6,c3],[0.0,-c6,-c3],[c0,c2,c5],[c0,c2,-c5],[c0,-c2,c5],[c0,-c2,-c5],[-c0,c2,c5],[-c0,c2,-c5],[-c0,-c2,c5],[-c0,-c2,-c5],[c5,c0,c2],[c5,c0,-c2],[c5,-c0,c2],[c5,-c0,-c2],[-c5,c0,c2],[-c5,c0,-c2],[-c5,-c0,c2],[-c5,-c0,-c2],[c2,c5,c0],[c2,c5,-c0],[c2,-c5,c0],[c2,-c5,-c0],[-c2,c5,c0],[-c2,c5,-c0],[-c2,-c5,c0],[-c2,-c5,-c0],[c4,c4,c4],[c4,c4,-c4],[c4,-c4,c4],[c4,-c4,-c4],[-c4,c4,c4],[-c4,c4,-c4],[-c4,-c4,c4],[-c4,-c4,-c4]]
   } else if (mode == 'joinedTruncatedIcosahedron') {
      c0 = 0.809016994374947424102293417183 //(1 + sqrt(5)) / 4
      c1 = 0.927050983124842272306880251548 //3 * (sqrt(5) - 1) / 4
      c2 = 1.33058699733550141141687582919  //9 * (9 + sqrt(5)) / 76
      c3 = 1.61803398874989484820458683437  //(1 + sqrt(5)) / 2
      c4 = 1.80901699437494742410229341718  //(5 + sqrt(5)) / 4
      c5 = 2.11803398874989484820458683437  //(2 + sqrt(5)) / 2
      c6 = 2.15293498667750705708437914596  //9 * (7 + 5 * sqrt(5)) / 76
      c7 = 2.427050983124842272306880251548 //3 * (1 + sqrt(5)) / 4
      shape = [[0.0,c1,c7],[0.0,c1,-c7],[0.0,-c1,c7],[0.0,-c1,-c7],[c7,0.0,c1],[c7,0.0,-c1],[-c7,0.0,c1],[-c7,0.0,-c1],[c1,c7,0.0],[c1,-c7,0.0],[-c1,c7,0.0],[-c1,-c7,0.0],[0.5,0.0,c7],[0.5,0.0,-c7],[-0.5,0.0,c7],[-0.5,0.0,-c7],[c7,0.5,0.0],[c7,-0.5,0.0],[-c7,0.5,0.0],[-c7,-0.5,0.0],[0.0,c7,0.5],[0.0,c7,-0.5],[0.0,-c7,0.5],[0.0,-c7,-0.5],[c2,0.0,c6],[c2,0.0,-c6],[-c2,0.0,c6],[-c2,0.0,-c6],[c6,c2,0.0],[c6,-c2,0.0],[-c6,c2,0.0],[-c6,-c2,0.0],[0.0,c6,c2],[0.0,c6,-c2],[0.0,-c6,c2],[0.0,-c6,-c2],[1.0,c0,c5],[1.0,c0,-c5],[1.0,-c0,c5],[1.0,-c0,-c5],[-1.0,c0,c5],[-1.0,c0,-c5],[-1.0,-c0,c5],[-1.0,-c0,-c5],[c5,1.0,c0],[c5,1.0,-c0],[c5,-1.0,c0],[c5,-1.0,-c0],[-c5,1.0,c0],[-c5,1.0,-c0],[-c5,-1.0,c0],[-c5,-1.0,-c0],[c0,c5,1.0],[c0,c5,-1.0],[c0,-c5,1.0],[c0,-c5,-1.0],[-c0,c5,1.0],[-c0,c5,-1.0],[-c0,-c5,1.0],[-c0,-c5,-1.0],[0.5,c3,c4],[0.5,c3,-c4],[0.5,-c3,c4],[0.5,-c3,-c4],[-0.5,c3,c4],[-0.5,c3,-c4],[-0.5,-c3,c4],[-0.5,-c3,-c4],[c4,0.5,c3],[c4,0.5,-c3],[c4,-0.5,c3],[c4,-0.5,-c3],[-c4,0.5,c3],[-c4,0.5,-c3],[-c4,-0.5,c3],[-c4,-0.5,-c3],[c3,c4,0.5],[c3,c4,-0.5],[c3,-c4,0.5],[c3,-c4,-0.5],[-c3,c4,0.5],[-c3,c4,-0.5],[-c3,-c4,0.5],[-c3,-c4,-0.5],[1.5,1.5,1.5],[1.5,1.5,-1.5],[1.5,-1.5,1.5],[1.5,-1.5,-1.5],[-1.5,1.5,1.5],[-1.5,1.5,-1.5],[-1.5,-1.5,1.5],[-1.5,-1.5,-1.5]]
   } else if (mode == 'joinedTruncatedDodecahedron') {
      c0 = 1.04955317926133973822831518963  //5 * (7 + sqrt(5)) / 44
      c1 = 1.30901699437494742410229341718  //(3 + sqrt(5)) / 4
      c2 = 1.61803398874989484820458683437  //(1 + sqrt(5)) / 2
      c3 = 1.69821271704535895291326075851  //5 * (3 + 2 * sqrt(5)) / 22
      c4 = 1.80901699437494742410229341718  //(5 + sqrt(5)) / 4
      c5 = 2.11803398874989484820458683437  //(2 + sqrt(5)) / 2
      c6 = 2.61803398874989484820458683437  //(3 + sqrt(5)) / 2
      c7 = 2.74776589630669869114157594814  //5 * (13 + 5 * sqrt(5)) / 44
      c8 = 2.927050983124842272306880251548 //(5 + 3 * sqrt(5)) / 4
      shape = [[c4,0.0,c8],[c4,0.0,-c8],[-c4,0.0,c8],[-c4,0.0,-c8],[c8,c4,0.0],[c8,-c4,0.0],[-c8,c4,0.0],[-c8,-c4,0.0],[0.0,c8,c4],[0.0,c8,-c4],[0.0,-c8,c4],[0.0,-c8,-c4],[0.0,0.5,c8],[0.0,0.5,-c8],[0.0,-0.5,c8],[0.0,-0.5,-c8],[c8,0.0,0.5],[c8,0.0,-0.5],[-c8,0.0,0.5],[-c8,0.0,-0.5],[0.5,c8,0.0],[0.5,-c8,0.0],[-0.5,c8,0.0],[-0.5,-c8,0.0],[0.0,c0,c7],[0.0,c0,-c7],[0.0,-c0,c7],[0.0,-c0,-c7],[c7,0.0,c0],[c7,0.0,-c0],[-c7,0.0,c0],[-c7,0.0,-c0],[c0,c7,0.0],[c0,-c7,0.0],[-c0,c7,0.0],[-c0,-c7,0.0],[0.5,c1,c6],[0.5,c1,-c6],[0.5,-c1,c6],[0.5,-c1,-c6],[-0.5,c1,c6],[-0.5,c1,-c6],[-0.5,-c1,c6],[-0.5,-c1,-c6],[c6,0.5,c1],[c6,0.5,-c1],[c6,-0.5,c1],[c6,-0.5,-c1],[-c6,0.5,c1],[-c6,0.5,-c1],[-c6,-0.5,c1],[-c6,-0.5,-c1],[c1,c6,0.5],[c1,c6,-0.5],[c1,-c6,0.5],[c1,-c6,-0.5],[-c1,c6,0.5],[-c1,c6,-0.5],[-c1,-c6,0.5],[-c1,-c6,-0.5],[c1,c2,c5],[c1,c2,-c5],[c1,-c2,c5],[c1,-c2,-c5],[-c1,c2,c5],[-c1,c2,-c5],[-c1,-c2,c5],[-c1,-c2,-c5],[c5,c1,c2],[c5,c1,-c2],[c5,-c1,c2],[c5,-c1,-c2],[-c5,c1,c2],[-c5,c1,-c2],[-c5,-c1,c2],[-c5,-c1,-c2],[c2,c5,c1],[c2,c5,-c1],[c2,-c5,c1],[c2,-c5,-c1],[-c2,c5,c1],[-c2,c5,-c1],[-c2,-c5,c1],[-c2,-c5,-c1],[c3,c3,c3],[c3,c3,-c3],[c3,-c3,c3],[c3,-c3,-c3],[-c3,c3,c3],[-c3,c3,-c3],[-c3,-c3,c3],[-c3,-c3,-c3]]
   } else if (mode == 'joinedTruncatedIcosidodecahedron') {
      c0  = 1.17518645301134929748244365923  //3 * (15 + sqrt(5)) / 44
      c1  = 1.30901699437494742410229341718  //(3 + sqrt(5)) / 4
      c2  = 1.38196601125010515179541316563  //(5 - sqrt(5)) / 2
      c3  = 1.61803398874989484820458683437  //(1 + sqrt(5)) / 2
      c4  = 1.80901699437494742410229341718  //(5 + sqrt(5)) / 4
      c5  = 1.901491624090794379859549273853 //3 * (5 + 4 * sqrt(5)) / 22
      c6  = 2.11803398874989484820458683437  //(2 + sqrt(5)) / 2
      c7  = 2.17082039324993690892275210062  //3 * (5 + sqrt(5)) / 10
      c8  = 2.23606797749978969640917366873  //sqrt(5)
      c9  = 2.427050983124842272306880251548 //3 * (1 + sqrt(5)) / 4
      c10 = 2.61803398874989484820458683437  //(3 + sqrt(5)) / 2
      c11 = 2.927050983124842272306880251548 //(5 + 3 * sqrt(5)) / 4
      c12 = 3.07667807710214367734199293309  //3 * (25 + 9 * sqrt(5)) / 44
      c13 = 3.11803398874989484820458683437  //(4 + sqrt(5)) / 2
      c14 = 3.427050983124842272306880251548 //(7 + 3 * sqrt(5)) / 4
      c15 = 3.51246117974981072676825630186  //3 * (5 + 3 * sqrt(5)) / 10
      c16 = 3.61803398874989484820458683437  //(5 + sqrt(5)) / 2
      c17 = 3.73606797749978969640917366873  //(3 + 2 * sqrt(5)) / 2
      c18 = 3.80298324818158875971909854771  //3 * (5 + 4 * sqrt(5)) / 11
      shape = [[0.0,0.0,c18],[0.0,0.0,-c18],[c18,0.0,0.0],[-c18,0.0,0.0],[0.0,c18,0.0],[0.0,-c18,0.0],[0.5,0.5,c17],[0.5,0.5,-c17],[0.5,-0.5,c17],[0.5,-0.5,-c17],[-0.5,0.5,c17],[-0.5,0.5,-c17],[-0.5,-0.5,c17],[-0.5,-0.5,-c17],[c17,0.5,0.5],[c17,0.5,-0.5],[c17,-0.5,0.5],[c17,-0.5,-0.5],[-c17,0.5,0.5],[-c17,0.5,-0.5],[-c17,-0.5,0.5],[-c17,-0.5,-0.5],[0.5,c17,0.5],[0.5,c17,-0.5],[0.5,-c17,0.5],[0.5,-c17,-0.5],[-0.5,c17,0.5],[-0.5,c17,-0.5],[-0.5,-c17,0.5],[-0.5,-c17,-0.5],[0.0,c2,c16],[0.0,c2,-c16],[0.0,-c2,c16],[0.0,-c2,-c16],[c16,0.0,c2],[c16,0.0,-c2],[-c16,0.0,c2],[-c16,0.0,-c2],[c2,c16,0.0],[c2,-c16,0.0],[-c2,c16,0.0],[-c2,-c16,0.0],[c7,0.0,c15],[c7,0.0,-c15],[-c7,0.0,c15],[-c7,0.0,-c15],[c15,c7,0.0],[c15,-c7,0.0],[-c15,c7,0.0],[-c15,-c7,0.0],[0.0,c15,c7],[0.0,c15,-c7],[0.0,-c15,c7],[0.0,-c15,-c7],[1.0,c1,c14],[1.0,c1,-c14],[1.0,-c1,c14],[1.0,-c1,-c14],[-1.0,c1,c14],[-1.0,c1,-c14],[-1.0,-c1,c14],[-1.0,-c1,-c14],[c14,1.0,c1],[c14,1.0,-c1],[c14,-1.0,c1],[c14,-1.0,-c1],[-c14,1.0,c1],[-c14,1.0,-c1],[-c14,-1.0,c1],[-c14,-1.0,-c1],[c1,c14,1.0],[c1,c14,-1.0],[c1,-c14,1.0],[c1,-c14,-1.0],[-c1,c14,1.0],[-c1,c14,-1.0],[-c1,-c14,1.0],[-c1,-c14,-1.0],[0.5,c6,c13],[0.5,c6,-c13],[0.5,-c6,c13],[0.5,-c6,-c13],[-0.5,c6,c13],[-0.5,c6,-c13],[-0.5,-c6,c13],[-0.5,-c6,-c13],[c13,0.5,c6],[c13,0.5,-c6],[c13,-0.5,c6],[c13,-0.5,-c6],[-c13,0.5,c6],[-c13,0.5,-c6],[-c13,-0.5,c6],[-c13,-0.5,-c6],[c6,c13,0.5],[c6,c13,-0.5],[c6,-c13,0.5],[c6,-c13,-0.5],[-c6,c13,0.5],[-c6,c13,-0.5],[-c6,-c13,0.5],[-c6,-c13,-0.5],[c0,c5,c12],[c0,c5,-c12],[c0,-c5,c12],[c0,-c5,-c12],[-c0,c5,c12],[-c0,c5,-c12],[-c0,-c5,c12],[-c0,-c5,-c12],[c12,c0,c5],[c12,c0,-c5],[c12,-c0,c5],[c12,-c0,-c5],[-c12,c0,c5],[-c12,c0,-c5],[-c12,-c0,c5],[-c12,-c0,-c5],[c5,c12,c0],[c5,c12,-c0],[c5,-c12,c0],[c5,-c12,-c0],[-c5,c12,c0],[-c5,c12,-c0],[-c5,-c12,c0],[-c5,-c12,-c0],[c4,c3,c11],[c4,c3,-c11],[c4,-c3,c11],[c4,-c3,-c11],[-c4,c3,c11],[-c4,c3,-c11],[-c4,-c3,c11],[-c4,-c3,-c11],[c11,c4,c3],[c11,c4,-c3],[c11,-c4,c3],[c11,-c4,-c3],[-c11,c4,c3],[-c11,c4,-c3],[-c11,-c4,c3],[-c11,-c4,-c3],[c3,c11,c4],[c3,c11,-c4],[c3,-c11,c4],[c3,-c11,-c4],[-c3,c11,c4],[-c3,c11,-c4],[-c3,-c11,c4],[-c3,-c11,-c4],[c1,c9,c10],[c1,c9,-c10],[c1,-c9,c10],[c1,-c9,-c10],[-c1,c9,c10],[-c1,c9,-c10],[-c1,-c9,c10],[-c1,-c9,-c10],[c10,c1,c9],[c10,c1,-c9],[c10,-c1,c9],[c10,-c1,-c9],[-c10,c1,c9],[-c10,c1,-c9],[-c10,-c1,c9],[-c10,-c1,-c9],[c9,c10,c1],[c9,c10,-c1],[c9,-c10,c1],[c9,-c10,-c1],[-c9,c10,c1],[-c9,c10,-c1],[-c9,-c10,c1],[-c9,-c10,-c1],[c8,c8,c8],[c8,c8,-c8],[c8,-c8,c8],[c8,-c8,-c8],[-c8,c8,c8],[-c8,c8,-c8],[-c8,-c8,c8],[-c8,-c8,-c8]]
   } else if (mode == 'cuboctahedron') {
      c0 = 0.7071067811865475244008443621048 //sqrt(2) / 2
      shape = [[c0,0.0,c0],[c0,0.0,-c0],[-c0,0.0,c0],[-c0,0.0,-c0],[c0,c0,0.0],[c0,-c0,0.0],[-c0,c0,0.0],[-c0,-c0,0.0],[0.0,c0,c0],[0.0,c0,-c0],[0.0,-c0,c0],[0.0,-c0,-c0]]
   } else if (mode == 'rhombicDodecahedron') {
      c0 = 0.530330085889910643300633271579 //3 * sqrt(2) / 8
      c1 = 1.06066017177982128660126654316  //3 * sqrt(2) / 4
      shape = [[0.0,0.0,c1],[0.0,0.0,-c1],[c1,0.0,0.0],[-c1,0.0,0.0],[0.0,c1,0.0],[0.0,-c1,0.0],[c0,c0,c0],[c0,c0,-c0],[c0,-c0,c0],[c0,-c0,-c0],[-c0,c0,c0],[-c0,c0,-c0],[-c0,-c0,c0],[-c0,-c0,-c0]]
   } else if (mode == 'truncatedGreatIcosahedron') {
      c0 = 0.118033988749894848204586834366 //(sqrt(5) - 2) / 2
      c1 = 0.309016994374947424102293417183 //(sqrt(5) - 1) / 4
      c2 = 0.618033988749894848204586834366 //(sqrt(5) - 1) / 2
      c3 = 0.690983005625052575897706582817 //(5 - sqrt(5)) / 4
      c4 = 0.927050983124842272306880251548 //3 * (sqrt(5) - 1) / 4
      shape = [[0.0,-0.5,c4],[0.0,-0.5,-c4],[0.0,0.5,c4],[0.0,0.5,-c4],[-0.5,c4,0.0],[0.5,c4,0.0],[-0.5,-c4,0.0],[0.5,-c4,0.0],[c4,0.0,-0.5],[c4,0.0,0.5],[-c4,0.0,-0.5],[-c4,0.0,0.5],[c1,-1.0,c0],[c1,-1.0,-c0],[-c1,-1.0,c0],[-c1,-1.0,-c0],[c1,1.0,c0],[c1,1.0,-c0],[-c1,1.0,c0],[-c1,1.0,-c0],[-1.0,c0,c1],[-1.0,c0,-c1],[1.0,c0,c1],[1.0,c0,-c1],[-1.0,-c0,c1],[-1.0,-c0,-c1],[1.0,-c0,c1],[1.0,-c0,-c1],[c0,c1,-1.0],[c0,c1,1.0],[-c0,c1,-1.0],[-c0,c1,1.0],[c0,-c1,-1.0],[c0,-c1,1.0],[-c0,-c1,-1.0],[-c0,-c1,1.0],[c2,-0.5,-c3],[c2,-0.5,c3],[-c2,-0.5,-c3],[-c2,-0.5,c3],[c2,0.5,-c3],[c2,0.5,c3],[-c2,0.5,-c3],[-c2,0.5,c3],[-0.5,-c3,c2],[-0.5,-c3,-c2],[0.5,-c3,c2],[0.5,-c3,-c2],[-0.5,c3,c2],[-0.5,c3,-c2],[0.5,c3,c2],[0.5,c3,-c2],[-c3,c2,-0.5],[-c3,c2,0.5],[c3,c2,-0.5],[c3,c2,0.5],[-c3,-c2,-0.5],[-c3,-c2,0.5],[c3,-c2,-0.5],[c3,-c2,0.5]]
   } else if (mode == 'greatStellapentakisDodecahedron') {
      c0 = 0.495040249835401793926484409117 //9 * (5 * sqrt(5) - 7) / 76
      c1 = 0.800991950032919641214703118177 //9 * (9 - sqrt(5)) / 76
      c2 = 0.927050983124842272306880251548 //3 * (sqrt(5) - 1) / 4
      c3 = 2.427050983124842272306880251548 //3 * (1 + sqrt(5)) / 4
      shape = [[c3,0.0,c2],[c3,0.0,-c2],[-c3,0.0,c2],[-c3,0.0,-c2],[0.0,c2,c3],[0.0,c2,-c3],[0.0,-c2,c3],[0.0,-c2,-c3],[c2,c3,0.0],[-c2,c3,0.0],[c2,-c3,0.0],[-c2,-c3,0.0],[0.0,-c1,c0],[0.0,-c1,-c0],[0.0,c1,c0],[0.0,c1,-c0],[-c1,c0,0.0],[c1,c0,0.0],[-c1,-c0,0.0],[c1,-c0,0.0],[c0,0.0,-c1],[c0,0.0,c1],[-c0,0.0,-c1],[-c0,0.0,c1],[-1.5,-1.5,-1.5],[-1.5,-1.5,1.5],[1.5,-1.5,-1.5],[1.5,-1.5,1.5],[-1.5,1.5,-1.5],[-1.5,1.5,1.5],[1.5,1.5,-1.5],[1.5,1.5,1.5]]
   }

   // default the vertex of a shape toward true north
   thetaY = Math.acos(Math.sqrt((3.0+Math.sqrt(5.0))/6.0))
   thetaX = toRadians(180.0);

   if (mode != "octahedron") {
      shape = rotateX(rotateY(shape, thetaY), thetaX);
   }

   // set rotational angles
   thetaX = bearing;
   thetaZ = toRadians(longitude);
   thetaY = -toRadians(latitude);

   var results = getCoordinates(rotateZ(rotateY(rotateX(shape, thetaX), thetaY), thetaZ));
   return results;

};

function getCoordinates(param) {

   var results = [];
   var i, tot;
   for (i=0, tot=param.length; i<tot; i++) {

      var x = param[i][0];
      var y = param[i][1];
      var z = param[i][2];

      var theta = 0.0;
      var phi = 0.0;
      if (z < 0) {
         theta = Math.PI+Math.atan(Math.sqrt(x*x+y*y)/z);
      } else if (z===0) {
         theta = Math.Pi/2.0;
      } else {
         theta = Math.atan(Math.sqrt(x*x+y*y)/z);
      }

      if (x < 0 && y !== 0) {
         phi = Math.PI+Math.atan(y/x);
      } else if (x === 0 && y > 0) {
         phi = Math.PI/2.0;
      } else if (x === 0 && y < 0) {
         phi = Math.PI*3.0/2.0;
      } else if (y === 0 && x > 0) {
         phi = 0;
      } else if (y === 0 && x < 0) {
         phi = Math.PI;
      } else if (x > 0 && y <= 0) {
         phi = 2*Math.PI+Math.atan(y/x);
      } else if (x === 0 && y === 0)  {
         phi = 888.0;
      } else {
         phi = Math.atan(y/x);
      }

      param[i][0] = theta;
      param[i][1] = phi;
      delete param[i][2];

      theta = toDegrees(theta);
      phi = toDegrees(phi);

      var longitude;
      var latitude = 90.0 - theta;
      if (phi <= 180.0) {
         longitude = phi;
      } else {
         longitude = phi - 360.0;
      }
      if (longitude > 600.0) {
         longitude = 0.0;
      }
      results.push([i,longitude,latitude,i+1]);

   }
   return results;
};

function rotateZ(param, thetaZ) {
  var i, tot;
  for (i=0, tot=param.length; i<tot; i++) {
    var x = param[i][0];
    var y = param[i][1];
    var z = param[i][2];

    param[i][0] = x*Math.cos(thetaZ)-y*Math.sin(thetaZ);
    param[i][1] = x*Math.sin(thetaZ)+y*Math.cos(thetaZ);
    param[i][2] = z;
  }
  return param;
}

function rotateX(param, thetaX) {
   var i, tot;
   for (i=0, tot=param.length; i<tot; i++) {
      var x = param[i][0];
      var y = param[i][1];
      var z = param[i][2];

      param[i][0] = x;
      param[i][1] = y*Math.cos(thetaX)-z*Math.sin(thetaX);
      param[i][2] = y*Math.sin(thetaX)+z*Math.cos(thetaX);
   }
   return param;
}

function rotateY(param, thetaY) {
   var i, tot;
   for (i=0, tot=param.length; i<tot; i++) {
      var x = param[i][0];
      var y = param[i][1];
      var z = param[i][2];

      param[i][0] = x*Math.cos(thetaY)+z*Math.sin(thetaY);
      param[i][1] = y;
      param[i][2] = -x*Math.sin(thetaY)+z*Math.cos(thetaY);
   }
   return param;
}

function toRadians(degrees) {
   return degrees * Math.PI / 180.0;
};

function toDegrees(radians) {
   return radians * 180.0 / Math.PI;
};
