// variables
let c0 = 1.30901699437494742410229341718 ; //(3 + sqrt(5)) / 4
let c1 = 1.61803398874989484820458683437 ; //(1 + sqrt(5)) / 2
let c2 = 2.11803398874989484820458683437 ; //(2 + sqrt(5)) / 2
let c3 = 2.61803398874989484820458683437 ; //(3 + sqrt(5)) / 2
let c4 = 2.927050983124842272306880251548; //(5 + 3 * sqrt(5)) / 4

let truncatedDodecahedron = {};
truncatedDodecahedron['name'] = "Truncated Dodecahedron";
truncatedDodecahedron['points'] = [[0.0,0.5,c4],[0.0,0.5,-c4],[0.0,-0.5,c4],[0.0,-0.5,-c4],[c4,0.0,0.5],[c4,0.0,-0.5],[-c4,0.0,0.5],[-c4,0.0,-0.5],[0.5,c4,0.0],[0.5,-c4,0.0],[-0.5,c4,0.0],[-0.5,-c4,0.0],[0.5,c0,c3],[0.5,c0,-c3],[0.5,-c0,c3],[0.5,-c0,-c3],[-0.5,c0,c3],[-0.5,c0,-c3],[-0.5,-c0,c3],[-0.5,-c0,-c3],[c3,0.5,c0],[c3,0.5,-c0],[c3,-0.5,c0],[c3,-0.5,-c0],[-c3,0.5,c0],[-c3,0.5,-c0],[-c3,-0.5,c0],[-c3,-0.5,-c0],[c0,c3,0.5],[c0,c3,-0.5],[c0,-c3,0.5],[c0,-c3,-0.5],[-c0,c3,0.5],[-c0,c3,-0.5],[-c0,-c3,0.5],[-c0,-c3,-0.5],[c0,c1,c2],[c0,c1,-c2],[c0,-c1,c2],[c0,-c1,-c2],[-c0,c1,c2],[-c0,c1,-c2],[-c0,-c1,c2],[-c0,-c1,-c2],[c2,c0,c1],[c2,c0,-c1],[c2,-c0,c1],[c2,-c0,-c1],[-c2,c0,c1],[-c2,c0,-c1],[-c2,-c0,c1],[-c2,-c0,-c1],[c1,c2,c0],[c1,c2,-c0],[c1,-c2,c0],[c1,-c2,-c0],[-c1,c2,c0],[-c1,c2,-c0],[-c1,-c2,c0],[-c1,-c2,-c0]];
truncatedDodecahedron['lines'] = [[0,2],[2,14],[14,38],[38,46],[46,22],[22,20],[20,44],[44,36],[36,12],[12,0],[1,3],[3,19],[19,43],[43,51],[51,27],[27,25],[25,49],[49,41],[41,17],[17,1],[0,16],[16,40],[40,48],[48,24],[24,26],[26,50],[50,42],[42,18],[18,2],[1,13],[13,37],[37,45],[45,21],[21,23],[23,47],[47,39],[39,15],[15,3],[4,5],[5,21],[45,53],[53,29],[29,28],[28,52],[52,44],[20,4],[4,22],[46,54],[54,30],[30,31],[31,55],[55,47],[23,5],[6,7],[7,27],[51,59],[59,35],[35,34],[34,58],[58,50],[26,6],[6,24],[48,56],[56,32],[32,33],[33,57],[57,49],[25,7],[8,10],[10,32],[56,40],[16,12],[36,52],[28,8],[9,11],[11,35],[59,43],[19,15],[39,55],[31,9],[8,29],[53,37],[13,17],[41,57],[33,10],[9,30],[54,38],[14,18],[42,58],[34,11]];
truncatedDodecahedron['areas'] = [[0,2,14,38,46,22,20,44,36,12],[1,3,19,43,51,27,25,49,41,17],[2,0,16,40,48,24,26,50,42,18],[3,1,13,37,45,21,23,47,39,15],[4,5,21,45,53,29,28,52,44,20],[5,4,22,46,54,30,31,55,47,23],[6,7,27,51,59,35,34,58,50,26],[7,6,24,48,56,32,33,57,49,25],[8,10,32,56,40,16,12,36,52,28],[9,11,35,59,43,19,15,39,55,31],[10,8,29,53,37,13,17,41,57,33],[11,9,30,54,38,14,18,42,58,34],[0,12,16],[1,17,13],[2,18,14],[3,15,19],[4,20,22],[5,23,21],[6,26,24],[7,25,27],[8,28,29],[9,31,30],[10,33,32],[11,34,35],[36,44,52],[37,53,45],[38,54,46],[39,47,55],[40,56,48],[41,49,57],[42,50,58],[43,59,51]];

truncatedDodecahedron['distance'] = 40000.0;
truncatedDodecahedron['color'] = [255,255,255];

export { truncatedDodecahedron };
