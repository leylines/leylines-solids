// variables
let c0  = 0.192893711352359022108262546061; //phi * sqrt(3 - (x^2)) / 2
let c1  = 0.330921024729844230963655269187; //x * phi * sqrt(3 - (x^2)) / 2
let c2  = 0.374821658114562295266609516608; //phi * sqrt((x - 1 - (1/x)) * phi) / 2
let c3  = 0.567715369466921317374872062669; //(x^2) * phi * sqrt(3 - (x^2)) / 2
let c4  = 0.643029605914072573107464141441; //x * phi * sqrt((x - 1 - (1/x)) * phi) / 2
let c5  = 0.728335176957191477360671629838; //phi * sqrt(1 - x + (1 + phi) / x) / 2
let c6  = 0.847550046789060797396217956030; //phi * sqrt(x + 1 - phi) / 2
let c7  = 1.103156835071753772627281146446; //(x^2) * phi * sqrt((x - 1 - (1/x)) * phi) / 2
let c8  = 1.24950378846302719500774109632 ; //x * phi * sqrt(1 - x + (1 + phi) / x) / 2
let c9  = 1.41526541625598211477109001870 ; //sqrt((x + 2) * phi + 2) / 2
let c10 = 1.45402422933801541929649491091 ; //x * sqrt(x * (1 + phi) - phi) / 2
let c11 = 1.64691794069037444140475745697 ; //sqrt((x^2) * (1 + 2 * phi) - phi) / 2
let c12 = 1.74618644098582634573474528789 ; //phi * sqrt((x^2) + x) / 2
let c13 = 1.97783896542021867236841272616 ; //(phi^2) * sqrt(x * (x + phi) + 1) / (2 * x)
let c14 = 2.097053835252087992403959052348; //phi * sqrt(x * (x + phi) + 1) / 2
// phi = (1 + sqrt(5)) / 2
// x = cbrt((phi + sqrt(phi-5/27))/2) + cbrt((phi - sqrt(phi-5/27))/2)

let snubDodecahedronLaevo = {};
snubDodecahedronLaevo['name'] = "Snub Dodecahedron (laevo)";
snubDodecahedronLaevo['points'] = [[c2,-c1,c14],[c2,c1,-c14],[-c2,c1,c14],[-c2,-c1,-c14],[c14,-c2,c1],[c14,c2,-c1],[-c14,c2,c1],[-c14,-c2,-c1],[c1,-c14,c2],[c1,c14,-c2],[-c1,c14,c2],[-c1,-c14,-c2],[c3,c4,c13],[c3,-c4,-c13],[-c3,-c4,c13],[-c3,c4,-c13],[c13,c3,c4],[c13,-c3,-c4],[-c13,-c3,c4],[-c13,c3,-c4],[c4,c13,c3],[c4,-c13,-c3],[-c4,-c13,c3],[-c4,c13,-c3],[c0,-c8,c12],[c0,c8,-c12],[-c0,c8,c12],[-c0,-c8,-c12],[c12,-c0,c8],[c12,c0,-c8],[-c12,c0,c8],[-c12,-c0,-c8],[c8,-c12,c0],[c8,c12,-c0],[-c8,c12,c0],[-c8,-c12,-c0],[c7,-c6,c11],[c7,c6,-c11],[-c7,c6,c11],[-c7,-c6,-c11],[c11,-c7,c6],[c11,c7,-c6],[-c11,c7,c6],[-c11,-c7,-c6],[c6,-c11,c7],[c6,c11,-c7],[-c6,c11,c7],[-c6,-c11,-c7],[c9,c5,c10],[c9,-c5,-c10],[-c9,-c5,c10],[-c9,c5,-c10],[c10,c9,c5],[c10,-c9,-c5],[-c10,-c9,c5],[-c10,c9,-c5],[c5,c10,c9],[c5,-c10,-c9],[-c5,-c10,c9],[-c5,c10,-c9]];
snubDodecahedronLaevo['lines'] = [[0,36],[36,28],[28,48],[48,12],[12,0],[1,37],[37,29],[29,49],[49,13],[13,1],[2,38],[38,30],[30,50],[50,14],[14,2],[3,39],[39,31],[31,51],[51,15],[15,3],[4,40],[40,32],[32,53],[53,17],[17,4],[5,41],[41,33],[33,52],[52,16],[16,5],[6,42],[42,34],[34,55],[55,19],[19,6],[7,43],[43,35],[35,54],[54,18],[18,7],[8,44],[44,24],[24,58],[58,22],[22,8],[9,45],[45,25],[25,59],[59,23],[23,9],[10,46],[46,26],[26,56],[56,20],[20,10],[11,47],[47,27],[27,57],[57,21],[21,11],[0,2],[14,0],[1,3],[15,1],[12,2],[13,3],[4,5],[16,4],[17,5],[6,7],[18,6],[19,7],[8,11],[21,8],[9,10],[20,9],[23,10],[22,11],[48,56],[56,12],[49,57],[57,13],[50,58],[58,14],[51,59],[59,15],[52,48],[48,16],[53,49],[49,17],[54,50],[50,18],[55,51],[51,19],[56,52],[52,20],[57,53],[53,21],[58,54],[54,22],[59,55],[55,23],[44,36],[36,24],[45,37],[37,25],[46,38],[38,26],[47,39],[39,27],[36,40],[40,28],[37,41],[41,29],[38,42],[42,30],[39,43],[43,31],[40,44],[44,32],[41,45],[45,33],[42,46],[46,34],[43,47],[47,35],[0,24],[1,25],[2,26],[3,27],[4,28],[5,29],[6,30],[7,31],[8,32],[9,33],[10,34],[11,35],[28,16],[29,17],[30,18],[31,19],[33,20],[32,21],[35,22],[34,23],[26,12],[27,13],[24,14],[25,15]];
snubDodecahedronLaevo['areas'] = [[0,36,28,48,12],[1,37,29,49,13],[2,38,30,50,14],[3,39,31,51,15],[4,40,32,53,17],[5,41,33,52,16],[6,42,34,55,19],[7,43,35,54,18],[8,44,24,58,22],[9,45,25,59,23],[10,46,26,56,20],[11,47,27,57,21],[0,2,14],[1,3,15],[2,0,12],[3,1,13],[4,5,16],[5,4,17],[6,7,18],[7,6,19],[8,11,21],[9,10,20],[10,9,23],[11,8,22],[12,48,56],[13,49,57],[14,50,58],[15,51,59],[16,52,48],[17,53,49],[18,54,50],[19,55,51],[20,56,52],[21,57,53],[22,58,54],[23,59,55],[24,44,36],[25,45,37],[26,46,38],[27,47,39],[28,36,40],[29,37,41],[30,38,42],[31,39,43],[32,40,44],[33,41,45],[34,42,46],[35,43,47],[36,0,24],[37,1,25],[38,2,26],[39,3,27],[40,4,28],[41,5,29],[42,6,30],[43,7,31],[44,8,32],[45,9,33],[46,10,34],[47,11,35],[48,28,16],[49,29,17],[50,30,18],[51,31,19],[52,33,20],[53,32,21],[54,35,22],[55,34,23],[56,26,12],[57,27,13],[58,24,14],[59,25,15],[24,0,14],[25,1,15],[26,2,12],[27,3,13],[28,4,16],[29,5,17],[30,6,18],[31,7,19],[32,8,21],[33,9,20],[34,10,23],[35,11,22],[36,44,40],[37,45,41],[38,46,42],[39,47,43],[48,52,56],[49,53,57],[50,54,58],[51,55,59]];

snubDodecahedronLaevo['distance'] = 40000.0;
snubDodecahedronLaevo['color'] = [255,255,255];

export { snubDodecahedronLaevo };
