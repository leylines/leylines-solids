// variables
let c0  = 0.0919831947610306166536978645902
let c1  = 0.157802827551188752848878549936
let c2  = 0.1787372607291718755716205007246
let c3  = 0.2707204554902024922253183653148
let c4  = 0.306634763068337552375856521956
let c5  = 0.347313533259692355979268469051
let c6  = 0.404162274015810538852548576480
let c7  = 0.5260507939888642315508889697754
let c8  = 0.5335632139999518363605442871496
let c9  = 0.595837725984189461147451423520
let c10 = 0.6748827295060130310778669417953
let c11 = 0.693365236931662447624143478044
let c12 = 0.785348431692693064277841342634
let c13 = 0.832685557057201783926745491732
let c14 = 0.863323415398555806964420242008
let c15 = 0.943151259243881817126719892570

// c0  = phi * (3 - (x^2));
// c1  = x * phi - 1 - phi;
// c2  = (1 + phi - x) / (x^3);
// c3  = x * phi * (x - phi);
// c4  = (1 + phi - x) / (x^2);
// c5  = (phi^2) * (x - 1 - 1 / x);
// c6  = ((x^2) + x - (1 + phi)) / (x^3);
// c7  = (x^2) * phi - 1 - 2 * phi;
// c8  = (x * (290+23*phi) + 4 * (290*phi-267) + (4/x) * (21*phi-118)) / 2201;
// c9  = (1 + phi) * ((x^2) - x - 1);
// c10 = 2 + phi - (x^2);
// c11 = ((x^2) + x - (1 + phi)) / (x^2);
// c12 = phi * (phi - x + 1 / x);
// c13 = x * phi + 1 - (x^2);
// c14 = (x * (23 + 313*phi) + 4 * (290 + 23*phi) - (4/x) * (97*phi - 21)) / 2201;
// c15 = phi / x;

let pentakisSnubDodecahedron = {};
pentakisSnubDodecahedron['name'] = "Geodesic Icosahedron Pattern 3 [2,1] (Pentakis Snub Dodecahedron)";
pentakisSnubDodecahedron['points'] = [[c2,-c1,1.0],[c2,c1,-1.0],[-c2,c1,1.0],[-c2,-c1,-1.0],[1.0,-c2,c1],[1.0,c2,-c1],[-1.0,c2,c1],[-1.0,-c2,-c1],[c1,-1.0,c2],[c1,1.0,-c2],[-c1,1.0,c2],[-c1,-1.0,-c2],[c3,c4,c15],[c3,-c4,-c15],[-c3,-c4,c15],[-c3,c4,-c15],[c15,c3,c4],[c15,-c3,-c4],[-c15,-c3,c4],[-c15,c3,-c4],[c4,c15,c3],[c4,-c15,-c3],[-c4,-c15,c3],[-c4,c15,-c3],[c8,0.0,c14],[c8,0.0,-c14],[-c8,0.0,c14],[-c8,0.0,-c14],[c14,c8,0.0],[c14,-c8,0.0],[-c14,c8,0.0],[-c14,-c8,0.0],[0.0,c14,c8],[0.0,c14,-c8],[0.0,-c14,c8],[0.0,-c14,-c8],[c0,-c9,c13],[c0,c9,-c13],[-c0,c9,c13],[-c0,-c9,-c13],[c13,-c0,c9],[c13,c0,-c9],[-c13,c0,c9],[-c13,-c0,-c9],[c9,-c13,c0],[c9,c13,-c0],[-c9,c13,c0],[-c9,-c13,-c0],[c7,-c6,c12],[c7,c6,-c12],[-c7,c6,c12],[-c7,-c6,-c12],[c12,-c7,c6],[c12,c7,-c6],[-c12,c7,c6],[-c12,-c7,-c6],[c6,-c12,c7],[c6,c12,-c7],[-c6,c12,c7],[-c6,-c12,-c7],[c10,c5,c11],[c10,-c5,-c11],[-c10,-c5,c11],[-c10,c5,-c11],[c11,c10,c5],[c11,-c10,-c5],[-c11,-c10,c5],[-c11,c10,-c5],[c5,c11,c10],[c5,-c11,-c10],[-c5,-c11,c10],[-c5,c11,-c10]];
pentakisSnubDodecahedron['lines'] = [[24,0],[0,48],[48,24],[48,40],[40,24],[40,60],[60,24],[60,12],[12,24],[12,0],[25,1],[1,49],[49,25],[49,41],[41,25],[41,61],[61,25],[61,13],[13,25],[13,1],[26,2],[2,50],[50,26],[50,42],[42,26],[42,62],[62,26],[62,14],[14,26],[14,2],[27,3],[3,51],[51,27],[51,43],[43,27],[43,63],[63,27],[63,15],[15,27],[15,3],[28,5],[5,53],[53,28],[53,45],[45,28],[45,64],[64,28],[64,16],[16,28],[16,5],[29,4],[4,52],[52,29],[52,44],[44,29],[44,65],[65,29],[65,17],[17,29],[17,4],[30,6],[6,54],[54,30],[54,46],[46,30],[46,67],[67,30],[67,19],[19,30],[19,6],[31,7],[7,55],[55,31],[55,47],[47,31],[47,66],[66,31],[66,18],[18,31],[18,7],[32,10],[10,58],[58,32],[58,38],[38,32],[38,68],[68,32],[68,20],[20,32],[20,10],[33,9],[9,57],[57,33],[57,37],[37,33],[37,71],[71,33],[71,23],[23,33],[23,9],[34,8],[8,56],[56,34],[56,36],[36,34],[36,70],[70,34],[70,22],[22,34],[22,8],[35,11],[11,59],[59,35],[59,39],[39,35],[39,69],[69,35],[69,21],[21,35],[21,11],[0,2],[14,0],[1,3],[15,1],[12,2],[13,3],[4,5],[16,4],[17,5],[6,7],[18,6],[19,7],[8,11],[21,8],[9,10],[20,9],[23,10],[22,11],[12,68],[38,12],[13,69],[39,13],[14,70],[36,14],[15,71],[37,15],[16,60],[40,16],[17,61],[41,17],[18,62],[42,18],[19,63],[43,19],[20,64],[45,20],[21,65],[44,21],[22,66],[47,22],[23,67],[46,23],[36,48],[0,36],[37,49],[1,37],[38,50],[2,38],[39,51],[3,39],[40,52],[4,40],[41,53],[5,41],[42,54],[6,42],[43,55],[7,43],[44,56],[8,44],[45,57],[9,45],[46,58],[10,46],[47,59],[11,47],[56,48],[57,49],[58,50],[59,51],[48,52],[49,53],[50,54],[51,55],[52,56],[53,57],[54,58],[55,59],[60,68],[61,69],[62,70],[63,71],[64,60],[65,61],[66,62],[67,63],[68,64],[69,65],[70,66],[71,67]];
pentakisSnubDodecahedron['areas'] = [[24,0,48],[24,48,40],[24,40,60],[24,60,12],[24,12,0],[25,1,49],[25,49,41],[25,41,61],[25,61,13],[25,13,1],[26,2,50],[26,50,42],[26,42,62],[26,62,14],[26,14,2],[27,3,51],[27,51,43],[27,43,63],[27,63,15],[27,15,3],[28,5,53],[28,53,45],[28,45,64],[28,64,16],[28,16,5],[29,4,52],[29,52,44],[29,44,65],[29,65,17],[29,17,4],[30,6,54],[30,54,46],[30,46,67],[30,67,19],[30,19,6],[31,7,55],[31,55,47],[31,47,66],[31,66,18],[31,18,7],[32,10,58],[32,58,38],[32,38,68],[32,68,20],[32,20,10],[33,9,57],[33,57,37],[33,37,71],[33,71,23],[33,23,9],[34,8,56],[34,56,36],[34,36,70],[34,70,22],[34,22,8],[35,11,59],[35,59,39],[35,39,69],[35,69,21],[35,21,11],[0,2,14],[1,3,15],[2,0,12],[3,1,13],[4,5,16],[5,4,17],[6,7,18],[7,6,19],[8,11,21],[9,10,20],[10,9,23],[11,8,22],[12,68,38],[13,69,39],[14,70,36],[15,71,37],[16,60,40],[17,61,41],[18,62,42],[19,63,43],[20,64,45],[21,65,44],[22,66,47],[23,67,46],[36,48,0],[37,49,1],[38,50,2],[39,51,3],[40,52,4],[41,53,5],[42,54,6],[43,55,7],[44,56,8],[45,57,9],[46,58,10],[47,59,11],[48,36,56],[49,37,57],[50,38,58],[51,39,59],[52,40,48],[53,41,49],[54,42,50],[55,43,51],[56,44,52],[57,45,53],[58,46,54],[59,47,55],[60,68,12],[61,69,13],[62,70,14],[63,71,15],[64,60,16],[65,61,17],[66,62,18],[67,63,19],[68,64,20],[69,65,21],[70,66,22],[71,67,23],[0,14,36],[1,15,37],[2,12,38],[3,13,39],[4,16,40],[5,17,41],[6,18,42],[7,19,43],[8,21,44],[9,20,45],[10,23,46],[11,22,47],[56,52,48],[57,53,49],[58,54,50],[59,55,51],[60,64,68],[61,65,69],[62,66,70],[63,67,71]];

pentakisSnubDodecahedron['distance'] = 20000.0;
pentakisSnubDodecahedron['color'] = [255,255,255];

export { pentakisSnubDodecahedron };
