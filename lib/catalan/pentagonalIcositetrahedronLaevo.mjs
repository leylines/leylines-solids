// variables
let c0 = 0.218796643000480441021525033712
let c1 = 0.740183741369857222808508165943
let c2 = 1.02365617811269018236347687527
let c3 = 1.36141015192644253450100912043

let pentagonalIcositetrahedronLaevo = {};
pentagonalIcositetrahedronLaevo['name'] = "Pentagonal Icositetrahedron (laevo)";
pentagonalIcositetrahedronLaevo['points'] = [[0.0,0.0,-c3],[0.0,0.0,c3],[-c3,0.0,0.0],[c3,0.0,0.0],[0.0,-c3,0.0],[0.0,c3,0.0],[-c1,c0,-c2],[-c1,-c0,c2],[c1,-c0,-c2],[c1,c0,c2],[-c2,c1,-c0],[-c2,-c1,c0],[c2,-c1,-c0],[c2,c1,c0],[-c0,c2,-c1],[-c0,-c2,c1],[c0,-c2,-c1],[c0,c2,c1],[-c0,-c1,-c2],[-c0,c1,c2],[c0,c1,-c2],[c0,-c1,c2],[-c2,-c0,-c1],[-c2,c0,c1],[c2,c0,-c1],[c2,-c0,c1],[-c1,-c2,-c0],[-c1,c2,c0],[c1,c2,-c0],[c1,-c2,c0],[-c1,-c1,-c1],[-c1,-c1,c1],[-c1,c1,-c1],[-c1,c1,c1],[c1,-c1,-c1],[c1,-c1,c1],[c1,c1,-c1],[c1,c1,c1]];
pentagonalIcositetrahedronLaevo['lines'] = [[0,18],[18,30],[30,22],[22,6],[6,0],[0,8],[8,34],[34,16],[16,18],[0,20],[20,36],[36,24],[24,8],[6,32],[32,14],[14,20],[1,19],[19,33],[33,23],[23,7],[7,1],[1,9],[9,37],[37,17],[17,19],[1,21],[21,35],[35,25],[25,9],[7,31],[31,15],[15,21],[2,23],[33,27],[27,10],[10,2],[2,11],[11,31],[2,22],[30,26],[26,11],[10,32],[3,25],[35,29],[29,12],[12,3],[3,13],[13,37],[3,24],[36,28],[28,13],[12,34],[4,29],[15,4],[4,16],[4,26],[5,28],[14,5],[5,17],[5,27]];
pentagonalIcositetrahedronLaevo['areas'] = [[0,18,30,22,6],[0,8,34,16,18],[0,20,36,24,8],[0,6,32,14,20],[1,19,33,23,7],[1,9,37,17,19],[1,21,35,25,9],[1,7,31,15,21],[2,23,33,27,10],[2,11,31,7,23],[2,22,30,26,11],[2,10,32,6,22],[3,25,35,29,12],[3,13,37,9,25],[3,24,36,28,13],[3,12,34,8,24],[4,29,35,21,15],[4,16,34,12,29],[4,26,30,18,16],[4,15,31,11,26],[5,28,36,20,14],[5,17,37,13,28],[5,27,33,19,17],[5,14,32,10,27]];

pentagonalIcositetrahedronLaevo['distance'] = 40000.0;
pentagonalIcositetrahedronLaevo['color'] = [255,255,255];

export { pentagonalIcositetrahedronLaevo };
