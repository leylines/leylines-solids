// variables
let c0 = 0.773459080339013578400241246316; //(4 + sqrt(2)) / 7
let c1 = 1.41421356237309504880168872421 ; //sqrt(2)

let deltoidalIcositetrahedron = {};
deltoidalIcositetrahedron['name'] = "Deltoidal Icositetrahedron";
deltoidalIcositetrahedron['points'] = [[0.0,0.0,c1],[0.0,0.0,-c1],[c1,0.0,0.0],[-c1,0.0,0.0],[0.0,c1,0.0],[0.0,-c1,0.0],[1.0,0.0,1.0],[1.0,0.0,-1.0],[-1.0,0.0,1.0],[-1.0,0.0,-1.0],[1.0,1.0,0.0],[1.0,-1.0,0.0],[-1.0,1.0,0.0],[-1.0,-1.0,0.0],[0.0,1.0,1.0],[0.0,1.0,-1.0],[0.0,-1.0,1.0],[0.0,-1.0,-1.0],[c0,c0,c0],[c0,c0,-c0],[c0,-c0,c0],[c0,-c0,-c0],[-c0,c0,c0],[-c0,c0,-c0],[-c0,-c0,c0],[-c0,-c0,-c0]];
deltoidalIcositetrahedron['lines'] = [[0,6],[6,18],[18,14],[14,0],[14,22],[22,8],[8,0],[8,24],[24,16],[16,0],[16,20],[20,6],[1,9],[9,23],[23,15],[15,1],[15,19],[19,7],[7,1],[7,21],[21,17],[17,1],[17,25],[25,9],[2,7],[19,10],[10,2],[10,18],[6,2],[20,11],[11,2],[11,21],[3,8],[22,12],[12,3],[12,23],[9,3],[25,13],[13,3],[13,24],[4,10],[15,4],[12,4],[14,4],[5,11],[16,5],[13,5],[17,5]];
deltoidalIcositetrahedron['areas'] = [[0,6,18,14],[0,14,22,8],[0,8,24,16],[0,16,20,6],[1,9,23,15],[1,15,19,7],[1,7,21,17],[1,17,25,9],[2,7,19,10],[2,10,18,6],[2,6,20,11],[2,11,21,7],[3,8,22,12],[3,12,23,9],[3,9,25,13],[3,13,24,8],[4,10,19,15],[4,15,23,12],[4,12,22,14],[4,14,18,10],[5,11,20,16],[5,16,24,13],[5,13,25,17],[5,17,21,11]];

deltoidalIcositetrahedron['distance'] = 20000.0;
deltoidalIcositetrahedron['color'] = [255,255,255];

export { deltoidalIcositetrahedron };
