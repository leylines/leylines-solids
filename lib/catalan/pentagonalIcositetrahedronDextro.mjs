// variables
let c0 = 0.218796643000480441021525033712
let c1 = 0.740183741369857222808508165943
let c2 = 1.02365617811269018236347687527
let c3 = 1.36141015192644253450100912043

let pentagonalIcositetrahedronDextro = {};
pentagonalIcositetrahedronDextro['name'] = "Pentagonal Icositetrahedron (dextro)";
pentagonalIcositetrahedronDextro['points'] = [[0.0,0.0,c3],[0.0,0.0,-c3],[c3,0.0,0.0],[-c3,0.0,0.0],[0.0,c3,0.0],[0.0,-c3,0.0],[c1,-c0,c2],[c1,c0,-c2],[-c1,c0,c2],[-c1,-c0,-c2],[c2,-c1,c0],[c2,c1,-c0],[-c2,c1,c0],[-c2,-c1,-c0],[c0,-c2,c1],[c0,c2,-c1],[-c0,c2,c1],[-c0,-c2,-c1],[c0,c1,c2],[c0,-c1,-c2],[-c0,-c1,c2],[-c0,c1,-c2],[c2,c0,c1],[c2,-c0,-c1],[-c2,-c0,c1],[-c2,c0,-c1],[c1,c2,c0],[c1,-c2,-c0],[-c1,-c2,c0],[-c1,c2,-c0],[c1,c1,c1],[c1,c1,-c1],[c1,-c1,c1],[c1,-c1,-c1],[-c1,c1,c1],[-c1,c1,-c1],[-c1,-c1,c1],[-c1,-c1,-c1]];
pentagonalIcositetrahedronDextro['lines'] = [[0,6],[6,22],[22,30],[30,18],[18,0],[18,16],[16,34],[34,8],[8,0],[8,24],[24,36],[36,20],[20,0],[20,14],[14,32],[32,6],[1,7],[7,23],[23,33],[33,19],[19,1],[19,17],[17,37],[37,9],[9,1],[9,25],[25,35],[35,21],[21,1],[21,15],[15,31],[31,7],[2,10],[10,27],[27,33],[23,2],[31,11],[11,2],[11,26],[26,30],[22,2],[32,10],[3,12],[12,29],[29,35],[25,3],[37,13],[13,3],[13,28],[28,36],[24,3],[34,12],[4,15],[29,4],[16,4],[26,4],[5,14],[28,5],[17,5],[27,5]];
pentagonalIcositetrahedronDextro['areas'] = [[0,6,22,30,18],[0,18,16,34,8],[0,8,24,36,20],[0,20,14,32,6],[1,7,23,33,19],[1,19,17,37,9],[1,9,25,35,21],[1,21,15,31,7],[2,10,27,33,23],[2,23,7,31,11],[2,11,26,30,22],[2,22,6,32,10],[3,12,29,35,25],[3,25,9,37,13],[3,13,28,36,24],[3,24,8,34,12],[4,15,21,35,29],[4,29,12,34,16],[4,16,18,30,26],[4,26,11,31,15],[5,14,20,36,28],[5,28,13,37,17],[5,17,19,33,27],[5,27,10,32,14]];

pentagonalIcositetrahedronDextro['distance'] = 40000.0;
pentagonalIcositetrahedronDextro['color'] = [255,255,255];

export { pentagonalIcositetrahedronDextro };
